# This is a SecretProviderClass example using user-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kvname-user-msi
  namespace: api
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"          # Set to true for using managed identity
    userAssignedIdentityID: 7bdf6c19-42ee-436f-bf05-324db492487e   # Set the clientID of the user-assigned managed identity to use
    keyvaultName: kvsecretshack           # Set to the name of your key vault
    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: SQLPassword
          objectType: secret              # object types: secret, key, or cert
          objectVersion: ""               # [OPTIONAL] object versions, default to latest if empty
          objectAlias: SQL_PASSWORD 
    tenantId: c38af2dd-94c5-414d-80e7-b93ee4b7923a # The tenant ID of the key vault
  # secretObjects:                              # [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects
  # - data:
  #   - key: SQL_PASSWORD                           # data field to populate
  #     objectName: SQL_PASSWORD                        # name of the mounted content to sync; this could be the object name or the object alias